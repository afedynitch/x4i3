# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pr:
- master

variables:
  package_name: x4i3

jobs:

- job: BuildUniversal

  pool:
    vmImage: 'ubuntu-latest'
  variables:
      python.architecture: 'none'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.9'
      architecture: 'x64'
  - script: |
      python -m pip install --upgrade pip
      python -m pip install --upgrade setuptools wheel
      python -m pip install -r requirements.txt
    displayName: 'Install dependencies'
  - script: |
      python -c "import x4i3"
    displayName: 'Trigger download of binary database (test once)'
  - script: |
      python setup.py sdist
    displayName: 'Make sdist'
  - script: |
      python setup.py bdist_wheel --universal
    displayName: 'Make wheel'
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'dist'
      artifact: 'artifact_$(package_name)'


- job: TestWindows
  dependsOn: BuildUniversal
  condition: succeeded()
  pool:
    vmImage: 'windows-latest'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'
        python.architecture: 'x64'
      Python38:
        python.version: '3.8'
        python.architecture: 'x64'
      Python39:
        python.version: '3.9'
        python.architecture: 'x64'
      Python310:
        python.version: '3.10'
        python.architecture: 'x64'
      # Python37_32:
      #   python.version: '3.7'
      #   python.architecture: 'x86'
      # Python38_32:
      #   python.version: '3.8'
      #   python.architecture: 'x86'
      # Python39_32:
      #   python.version: '3.9'
      #   python.architecture: 'x86'
  steps:
    - template: azure-tests.yml

- job: TestLinux
  dependsOn: BuildUniversal
  condition: succeeded()
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'
        python.architecture: 'x64'
      Python38:
        python.version: '3.8'
        python.architecture: 'x64'
      Python39:
        python.version: '3.9'
        python.architecture: 'x64'
      Python310:
        python.version: '3.10'
        python.architecture: 'x64'
  steps:
    - template: azure-tests.yml

  
- job: TestMacOS
  dependsOn: BuildUniversal
  condition: succeeded()
  pool:
    vmImage: 'macOS-11'
  variables:
    python.architecture: 'x64'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
  steps:
    # - script:
    #     case $(python.version) in
    #     3.7)
    #       FULL_VERSION=3.7.8
    #       ;;
    #     3.8)
    #       FULL_VERSION=3.8.10
    #       ;;
    #     3.9)
    #       FULL_VERSION=3.9.5
    #       ;;
    #     esac

    #     INSTALLER_NAME=python-$FULL_VERSION-macosx10.9.pkg
    #     URL=https://www.python.org/ftp/python/$FULL_VERSION/$INSTALLER_NAME

    #     PY_PREFIX=/Library/Frameworks/Python.framework/Versions

    #     set -e -x

    #     curl $URL > $INSTALLER_NAME

    #     sudo installer -pkg $INSTALLER_NAME -target /

    #     sudo rm -f /usr/local/bin/python

    #     sudo ln -s /usr/local/bin/python$(python.version) /usr/local/bin/python

    #     which python

    #     python --version

    #     python -m ensurepip

    #     python -m pip install pip --upgrade

    #     python -m pip install setuptools twine wheel

    #   displayName: 'Installing python from python.org'

    - template: azure-tests.yml
  