steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: 'artifact_$(package_name)'
      path: 'dist'
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: '$(python.architecture)'
      displayName: 'Switch to Python $(python.version) on $(python.architecture)'
  - script: |
      python -m pip install --upgrade pip
      python -m pip install -r requirements.txt
      python -m pip install $(package_name) --no-index -f dist
    displayName: 'Install wheel'
  - script: |
      pip install pytest pytest-azurepipelines
      python -m pytest --pyargs x4i3 --ignore=x4i3/data --junitxml=junit/test-results.xml
    displayName: 'Test with pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'
    condition: succeededOrFailed()